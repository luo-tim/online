<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper  namespace="recruitSystem.dao.job.JobInfoDAO">

	<!-- 建立sql查询结果字段与实体属性的映射关系 -->
	<resultMap id="JobInfoMap" type="recruitSystem.view.Job">
 		<result  column="id"  property="id" />
 		<result  column="job_name"  property="jobName" />
 		<result  column="salary"  property="salary" />
 		<result  column="city"  property="city" />
 		<result  column="job_type"  property="jobType" />
 		<result  column="experience"  property="experience" />
 		<result  column="education"  property="education" />
 		<result  column="flag"  property="flag" />
 		<result  column="job_description"  property="jobDescription" />
 		<result  column="work_address"  property="workAddress" />
 		<result  column="job_request"  property="jobRequest" />
 		<result  column="release_time"  property="releaseTime" />
 		<result  column="mid"  property="mid" />
 		<association property="boss" javaType="recruitSystem.view.User">
 			<result  column="user_id"  property="id" />
	 		<result  column="user_name"  property="userName" />
	 		<result  column="account"  property="account" />
	 		<result  column="password"  property="password" />
	 		<result  column="identity_id"  property="identityId" />
	 		<result  column="credit"  property="credit" />
	 		<result  column="enable"  property="enable" />
	 		<result  column="last_name"  property="lastName" />
	 		<result  column="first_name"  property="firstName" />
	 		<result  column="date_of_birth"  property="dateOfBirth" />
	 		<result  column="id_number"  property="IDNumber" />
	 		<result  column="phone_number"  property="phoneNumber" />
	 		<result  column="email"  property="email" />
	 		<result  column="sex"  property="sex" />
 		</association>
 		<association property="company" javaType="recruitSystem.view.Company">
	 		 <result  column="company_id"  property="id" />
			 <result  column="company_description"  property="companyDescription" />
			 <result  column="leader_introduce"  property="leaderIntroduce" />
			 <result  column="company_name"  property="companyName" />
			 <result  column="address"  property="address" />
			 <result  column="boss_num"  property="bossNum" />
			 <result  column="job_num"  property="job_num" />
			 <result  column="treatment"  property="treatment" />
			 <result  column="company_type"  property="companyType" /> 
			 <result  column="company_logo"  property="companyLogo" />
			 <result  column="company_flag"  property="flag" />
			 <result  column="company_mid"  property="mid" />
	 	</association>
	 	<association property="signUpJob" javaType="recruitSystem.view.SignUpJob">
	 		 <result  column="signup_id"  property="signUpId" />
			 <result  column="signup_t"  property="signUpTime" />
			 <result  column="signup_flag"  property="flag" />
	 	</association>
	 	<association property="browseJob" javaType="recruitSystem.view.BrowseJob">
	 		 <result  column="browse_id"  property="browseId" />
			 <result  column="browse_t"  property="browseTime" />
	 	</association>
 	</resultMap>
 	<select id="findReleaseJob" resultMap="JobInfoMap">
 		SELECT 
 			j.id,
 			j.flag,
 			j.job_name,
 			j.salary,
 			j.city,
 			j.experience,
 			j.education,
 			j.job_description,
 			c.id company_id,
 			c.company_name,
 			c.company_type,
 			c.company_logo
 		FROM
 			user u,
 			job j,
 			company c,
 			cb h
 		WHERE
 			u.id = j.boss_id
 		AND u.id = h.boss_id
 		AND h.company_id = c.id
 		AND u.id= #{id}
 		AND j.flag = #{tag}
 	</select>
	
	<select id="findSignupJob" resultMap="JobInfoMap">
 		SELECT 
 			j.id,
 			j.flag,
 			j.job_name,
 			j.salary,
 			j.city,
 			j.job_type
 			j.experience,
 			j.education,
 			j.job_description,
 			w.flag signup_flag,
 			w.t signup_t,
 			u.last_name,
 			u.sex,
 			c.id company_id,
 			c.company_name,
 			c.company_type,
 			c.company_logo
 		FROM
 			user u,
 			job j,
 			company c,
 			cb h,
 			workersignup w
 		WHERE
 			u.id = j.boss_id
 		AND u.id = h.boss_id
 		AND w.employment_id = j.id
 		AND h.company_id = c.id
 		AND w.worker_id= #{id}
 		AND w.flag = #{tag}
 		AND ( j.flag=1 OR j.flag=2 )
 	</select>
 	<select id="findHistoryJob" resultMap="JobInfoMap">
 		SELECT 
 			j.id,
 			j.flag,
 			j.job_name,
 			j.salary,
 			j.city,
 			j.experience,
 			j.education,
 			j.job_description,
 			w.t browse_t,
 			u.last_name,
 			u.sex,
 			c.id company_id,
 			c.company_name,
 			c.company_type,
 			c.company_logo
 		FROM
 			user u,
 			job j,
 			company c,
 			cb h,
 			workerhistory w
 		WHERE
 			u.id = j.boss_id
 		AND w.employment_id = j.id
 		AND u.id = h.boss_id
 		AND h.company_id = c.id
 		AND w.worker_id= #{id}
 	</select>
 	<select id="findJob" resultMap="JobInfoMap">
 		SELECT
 			j.id,
 			j.job_name,
 			j.salary,
 			j.city,
 			j.job_type,
 			j.experience,
 			j.education,
 			j.job_description,
 			j.work_address,
 			j.job_request,
 			j.flag,
 			u.last_name,
 			u.sex,
 			c.company_name,
 			c.id company_id,
 			c.company_type,
 			c.company_logo,
 			c.treatment
 			
 			
 		FROM
 			user u,
 			job j,
 			cb h,
 			company c
 		WHERE
 			u.identity_id = 1
 		AND u.enable = true
 		AND u.id = j.boss_id
 		AND u.id = h.boss_id
 		AND h.company_id = c.id
 		AND j.id = #{jobId}
 		AND (j.flag=0 OR j.flag=1 OR j.flag=2)
 	</select> 
 	<select id="existHistory"  resultType="int">
 		SELECT
 			COUNT(*)
 		FROM
 			workerhistory
 		WHERE
 			worker_id = #{userId}
 		AND employment_id = #{jobId}
 			
 	</select>
 	<update id="updateHistory">
 		UPDATE workerhistory
 		<set>
 			t = #{browseJob.browseTime}
 		</set>
 		WHERE 
 			worker_id = #{browseJob.userId}
 		AND employment_id = #{browseJob.jobId}
 	</update>
 	
 	<insert id="insertHistory">
 		INSERT INTO workerhistory(worker_id,employment_id,t)
 		VALUES(#{browseJob.userId},#{browseJob.jobId},#{browseJob.browseTime})
 	</insert>
 	<insert id="insertWorkerSignup">
 		INSERT INTO workersignup(worker_id,employment_id,t,flag)
 		VALUES(#{signUpJob.userId},#{signUpJob.jobId},#{signUpJob.signUpTime},0)
 	</insert>
 	<select id="getBossId" resultType="string">
 		SELECT
 			boss_id
 		FROM
 			job
 		WHERE
 		 id = #{jobId}
 	</select>
 	<update id="successJobs">
 		UPDATE job
 		<set>
 			mid = #{userId},
 			flag = 1
 		</set>
 		WHERE
 			id = #{jobId}
 	</update>
 	
 	<delete id="failJobs">
 		DELETE FROM
 			job
 		WHERE
 			id = #{jobId}
 		AND	flag = 0
 	</delete>
 	<update id="deleteJob">
 		UPDATE job
 		<set>
 			flag = 3
 		</set>
 		WHERE
 			id = #{jobId}
 			flag !=0
 	</update>
 	
 	<select id="findCompanyJobs">
 		SELECT
 			j.id,
 			j.job_name,
 			j.salary,
 			j.city,
 			j.job_type,
 			j.experience,
 			j.education,
 			j.job_description,
 			j.work_address,
 			j.job_request,
 			j.flag,
 			u.last_name,
 			u.sex,
 			c.company_name,
 			c.id company_id,
 			c.company_type,
 			c.company_logo,
 			c.treatment
 			
 			
 		FROM
 			user u,
 			job j,
 			cb h,
 			company c
 		WHERE
 			u.identity_id = 1
 		AND u.enable = true
 		AND u.id = j.boss_id
 		AND u.id = h.boss_id
 		AND h.company_id = c.id
 		AND c.id = #{companyId}
 		AND (j.flag=0 OR j.flag=1 OR j.flag=2)
 	</select>
 		<!-- 插入工作,返回工作id -->
	<insert id="insert" parameterType="recruitSystem.view.Job" useGeneratedKeys="true" keyProperty="id">
	
		INSERT INTO job(boss_id,release_time,job_name,job_description,work_address,
						salary,city,job_type,experience,education,job_request,flag)
		VALUES(#{bossId},#{releaseTime},#{jobName},#{jobDescription},#{workAddress},
				#{salary},#{city},#{jobType},#{experience},#{education},#{jobRequest},0)
		
	</insert>
 	<select id="findBossJob" resultMap="JobInfoMap">
		SELECT
 			j.id,
 			j.job_name,
 			j.salary,
 			j.city,
 			j.job_type,
 			j.experience,
 			j.education,
 			j.job_description,
 			j.work_address,
 			j.job_request,
 			j.flag,
 			u.last_name,
 			u.sex,
 			c.company_name,
 			c.id company_id,
 			c.company_type,
 			c.company_logo,
 			c.treatment
 			
 			
 		FROM
 			user u,
 			job j,
 			cb h,
 			company c
 		WHERE
 			u.identity_id = 1
 		AND u.enable = true
 		AND u.id = j.boss_id
 		AND u.id = h.boss_id
 		AND h.company_id = c.id
 		AND j.id = #{jobId}
 		AND (j.flag=0 OR j.flag=1 OR j.flag=2)
	</select>
	
	<update id="updateJobFinshed">
		UPDATE job
		<set>
			flag = 2
		</set>
		WHERE
			id = #{jobId}
	</update>
	<select id="jobCount">
		SELECT COUNT(*)
		FROM
			user u,
			job j,
			company c,
			cb h
		WHERE
			u.enable=true
		AND u.id = j.boss_id
		AND h.company_id = c.id
		AND u.id = h.boss_id
		AND j.flag= #{flag} 
		<if test="query!=null and query!=''">
 			AND (j.job_name LIKE #{query} OR c.company_name LIKE #{query} OR j.city LIKE #{query}) 
 		</if>
		<if test="city!=null and city!='城市'">
			AND j.city = #{city}
		</if>
			<if test="type!=null and type!='工作类型'">
			AND j.job_type = #{type}
		</if>
	</select>
	<select id="findJobs" resultMap="JobInfoMap">
		SELECT
 			j.id,
 			j.job_name,
 			j.salary,
 			j.city,
 			j.job_type,
 			j.experience,
 			j.education,
 			j.job_description,
 			j.work_address,
 			j.job_request,
 			j.flag,
 			u.last_name,
 			u.sex,
 			c.company_name,
 			c.id company_id,
 			c.company_type,
 			c.company_logo,
 			c.treatment
 			
 			
 		FROM
 			user u,
 			job j,
 			cb h,
 			company c
 		WHERE
 			u.identity_id = 1
 		AND u.enable = true
 		AND u.id = j.boss_id
 		AND u.id = h.boss_id
 		AND h.company_id = c.id
 		AND j.flag=1
 		<if test="query!=null and query!=''">
 			AND (j.job_name LIKE #{query} OR c.company_name LIKE #{query} OR j.city LIKE #{query}) 
 		</if>
		<if test="city!=null and city!='城市'">
			AND j.city = #{city}
		</if>
		<if test="type!=null and type!='工作类型'">
			AND j.job_type = #{type}
		</if>
		LIMIT 5
		OFFSET  #{startIndex}
	</select>
</mapper>